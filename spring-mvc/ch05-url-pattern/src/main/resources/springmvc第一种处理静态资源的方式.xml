<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--声明组件扫描器-->
    <context:component-scan base-package="com.tfsuefe.controller"/>
    <!--<mvc:annotation-driven>注解驱动。json的注解驱动 使用ResponseBody需要
    default-servlet-handler和@RequestMapping有冲突，需要加入annotation-driven来解决这个问题-->
    <mvc:annotation-driven/>
    <!--声明springmvc框架中的视图解析器，帮助开发人员设置试图路径-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--前缀：视图文件的路径-->
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <!--后缀：视图文件的扩展名-->
        <property name="suffix" value=".jsp"/>
    </bean>
<!--    第一种处理静态资源的方式，需要在springmvc配置文件中加入<mvc:default-servlet-handler>
        原理是加入这个标签后，框架会创建控制器对象DefaultServletHttpRequestHandler（就是
        类似自己创建的MyController），DefaultServletHttpRequestHandler这个对象可以把接收的
        请求转发给tomcat的default这个servlet
-->
    <mvc:default-servlet-handler/>
</beans>