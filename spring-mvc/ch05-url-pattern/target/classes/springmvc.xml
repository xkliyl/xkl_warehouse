<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--声明组件扫描器-->
    <context:component-scan base-package="com.tfsuefe.controller"/>

    <!--声明springmvc框架中的视图解析器，帮助开发人员设置试图路径-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--前缀：视图文件的路径-->
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <!--后缀：视图文件的扩展名-->
        <property name="suffix" value=".jsp"/>
    </bean>
<!--第二种处理静态资源的方式:
    mvc:resources 加入框架后会创建一个ResourceHttpRequestHandler处理器对象
    热那个这个队形处理静态资源的访问，不依赖tomcat服务器
    mapping：访问静态资源的URL地址，使用通配符“*”
    location：静态资源在项目中的目录位置
    images/**:表示目录下的所有目录中的图片，例如images/girl.ipg,images/other/girl.jps,
    images/girl.png,images/girl.gif-->
<!--    <mvc:resources mapping="/images/**" location="/images/"/>-->
<!--    <mvc:resources mapping="/html/**" location="/html/"/>-->
<!--    <mvc:resources mapping="/js/**" location="/js/"/>-->
<!--    mvc:resources与RequestMapping有冲突,加入注解驱动-->
    <mvc:annotation-driven/>

<!--    使用一个配置语句，指定多个静态资源的访问-->
    <mvc:resources mapping="/static/**" location="/static/"/>
</beans>